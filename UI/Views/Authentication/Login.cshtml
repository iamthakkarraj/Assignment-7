@model BLL.ViewModels.LoginModel

@{
    ViewBag.Title = "Login";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4>Login</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text bg-primary text-white border-0 rounded-0 shadow" id="password-icon"><i class="fa fa-lock"></i></span>
                    </div>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control border-0 shadow rounded-0" } })
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text bg-primary text-white border-0 rounded-0 shadow" id="password-icon"><i class="fa fa-lock"></i></span>
                    </div>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control border-0 shadow rounded-0" } })
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>

    @Scripts.Render("~/Scripts/jquery.validate.min.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
}